/*
 * OpenCDE document API
 * Proposals for OpenCDE document API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: dirk.harbinson@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.model.DocumentReferenceFileDescription;
import org.openapitools.model.DocumentReferenceLinks;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * DocumentReference
 */
@JsonPropertyOrder({
  DocumentReference.JSON_PROPERTY_LINKS,
  DocumentReference.JSON_PROPERTY_VERSION,
  DocumentReference.JSON_PROPERTY_VERSION_DATE,
  DocumentReference.JSON_PROPERTY_TITLE,
  DocumentReference.JSON_PROPERTY_FILE_DESCRIPTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-10T16:51:27.349+01:00[Europe/Berlin]")
public class DocumentReference   {
  public static final String JSON_PROPERTY_LINKS = "_links";
  @JsonProperty(JSON_PROPERTY_LINKS)
  private DocumentReferenceLinks links;

  public static final String JSON_PROPERTY_VERSION = "version";
  @JsonProperty(JSON_PROPERTY_VERSION)
  private String version;

  public static final String JSON_PROPERTY_VERSION_DATE = "version_date";
  @JsonProperty(JSON_PROPERTY_VERSION_DATE)
  private String versionDate;

  public static final String JSON_PROPERTY_TITLE = "title";
  @JsonProperty(JSON_PROPERTY_TITLE)
  private String title;

  public static final String JSON_PROPERTY_FILE_DESCRIPTION = "file_description";
  @JsonProperty(JSON_PROPERTY_FILE_DESCRIPTION)
  private DocumentReferenceFileDescription fileDescription;

  public DocumentReference links(DocumentReferenceLinks links) {
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   **/
  @JsonProperty("_links")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public DocumentReferenceLinks getLinks() {
    return links;
  }

  public void setLinks(DocumentReferenceLinks links) {
    this.links = links;
  }

  public DocumentReference version(String version) {
    this.version = version;
    return this;
  }

  /**
   * The version string for this version of the document
   * @return version
   **/
  @JsonProperty("version")
  @ApiModelProperty(required = true, value = "The version string for this version of the document")
  @NotNull 
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public DocumentReference versionDate(String versionDate) {
    this.versionDate = versionDate;
    return this;
  }

  /**
   * The timestamp of when this documents was created in the CDE
   * @return versionDate
   **/
  @JsonProperty("version_date")
  @ApiModelProperty(required = true, value = "The timestamp of when this documents was created in the CDE")
  @NotNull 
  public String getVersionDate() {
    return versionDate;
  }

  public void setVersionDate(String versionDate) {
    this.versionDate = versionDate;
  }

  public DocumentReference title(String title) {
    this.title = title;
    return this;
  }

  /**
   * A human readable string representing the document
   * @return title
   **/
  @JsonProperty("title")
  @ApiModelProperty(required = true, value = "A human readable string representing the document")
  @NotNull 
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public DocumentReference fileDescription(DocumentReferenceFileDescription fileDescription) {
    this.fileDescription = fileDescription;
    return this;
  }

  /**
   * Get fileDescription
   * @return fileDescription
   **/
  @JsonProperty("file_description")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public DocumentReferenceFileDescription getFileDescription() {
    return fileDescription;
  }

  public void setFileDescription(DocumentReferenceFileDescription fileDescription) {
    this.fileDescription = fileDescription;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentReference documentReference = (DocumentReference) o;
    return Objects.equals(this.links, documentReference.links) &&
        Objects.equals(this.version, documentReference.version) &&
        Objects.equals(this.versionDate, documentReference.versionDate) &&
        Objects.equals(this.title, documentReference.title) &&
        Objects.equals(this.fileDescription, documentReference.fileDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, version, versionDate, title, fileDescription);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentReference {\n");
    
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionDate: ").append(toIndentedString(versionDate)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    fileDescription: ").append(toIndentedString(fileDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

