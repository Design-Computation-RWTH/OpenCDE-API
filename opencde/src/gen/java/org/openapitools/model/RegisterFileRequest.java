/*
 * OpenCDE document API
 * Proposals for OpenCDE document API
 *
 * The version of the OpenAPI document: 0.1
 * Contact: dirk.harbinson@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * RegisterFileRequest
 */
@JsonPropertyOrder({
  RegisterFileRequest.JSON_PROPERTY_FILENAME,
  RegisterFileRequest.JSON_PROPERTY_SIZE,
  RegisterFileRequest.JSON_PROPERTY_LAST_MODIFIED,
  RegisterFileRequest.JSON_PROPERTY_VERSION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-10T16:51:27.349+01:00[Europe/Berlin]")
public class RegisterFileRequest   {
  public static final String JSON_PROPERTY_FILENAME = "filename";
  @JsonProperty(JSON_PROPERTY_FILENAME)
  private String filename;

  public static final String JSON_PROPERTY_SIZE = "size";
  @JsonProperty(JSON_PROPERTY_SIZE)
  private String size;

  public static final String JSON_PROPERTY_LAST_MODIFIED = "last_modified";
  @JsonProperty(JSON_PROPERTY_LAST_MODIFIED)
  private String lastModified;

  public static final String JSON_PROPERTY_VERSION = "version";
  @JsonProperty(JSON_PROPERTY_VERSION)
  private String version;

  public RegisterFileRequest filename(String filename) {
    this.filename = filename;
    return this;
  }

  /**
   * Get filename
   * @return filename
   **/
  @JsonProperty("filename")
  @ApiModelProperty(example = "Office Arch.ifc", value = "")
  
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }

  public RegisterFileRequest size(String size) {
    this.size = size;
    return this;
  }

  /**
   * Get size
   * @return size
   **/
  @JsonProperty("size")
  @ApiModelProperty(example = "4099307", value = "")
  
  public String getSize() {
    return size;
  }

  public void setSize(String size) {
    this.size = size;
  }

  public RegisterFileRequest lastModified(String lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * Get lastModified
   * @return lastModified
   **/
  @JsonProperty("last_modified")
  @ApiModelProperty(example = "2019-11-04T04:46:55.880Z", value = "")
  
  public String getLastModified() {
    return lastModified;
  }

  public void setLastModified(String lastModified) {
    this.lastModified = lastModified;
  }

  public RegisterFileRequest version(String version) {
    this.version = version;
    return this;
  }

  /**
   * A unique identifer to a document version on the CDE
   * @return version
   **/
  @JsonProperty("version")
  @ApiModelProperty(example = "793f227a9c2847969b7a845b95eb8a0f", value = "A unique identifer to a document version on the CDE")
  
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegisterFileRequest registerFileRequest = (RegisterFileRequest) o;
    return Objects.equals(this.filename, registerFileRequest.filename) &&
        Objects.equals(this.size, registerFileRequest.size) &&
        Objects.equals(this.lastModified, registerFileRequest.lastModified) &&
        Objects.equals(this.version, registerFileRequest.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filename, size, lastModified, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegisterFileRequest {\n");
    
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

